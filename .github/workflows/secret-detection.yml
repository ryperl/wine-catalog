name: Secret Detection

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  secret-detection:
    name: Secret Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set scan parameters
      id: scan-params
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "base=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
          echo "head=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          echo "scan-type=diff" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" = "push" ] && [ "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ] && [ "${{ github.event.before }}" != "" ]; then
          echo "base=${{ github.event.before }}" >> $GITHUB_OUTPUT
          echo "head=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "scan-type=diff" >> $GITHUB_OUTPUT
        else
          echo "scan-type=full" >> $GITHUB_OUTPUT
        fi

    - name: Run TruffleHog (Diff Scan)
      if: steps.scan-params.outputs.scan-type == 'diff'
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ steps.scan-params.outputs.base }}
        head: ${{ steps.scan-params.outputs.head }}
        extra_args: --debug --only-verified --fail

    - name: Run TruffleHog (Full Scan)
      if: steps.scan-params.outputs.scan-type == 'full'
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        extra_args: --debug --only-verified --fail --since-commit=HEAD~10

    - name: Upload scan results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trufflehog-results
        path: |
          trufflehog-results.json
        retention-days: 30

  comment-results:
    name: Comment on PR
    runs-on: ubuntu-latest
    needs: secret-detection
    if: github.event_name == 'pull_request' && always()
    
    steps:
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo, number } = context.issue;
          const result = '${{ needs.secret-detection.result }}';
          
          let message = '';
          if (result === 'success') {
            message = `üîí **Secret Detection: PASSED** ‚úÖ
            
            No secrets or credentials were detected in this PR.
            
            Scanned by TruffleHog with verified detectors only.`;
          } else {
            message = `üö® **Secret Detection: FAILED** ‚ùå
            
            **CRITICAL:** Potential secrets or credentials detected!
            
            ‚ö†Ô∏è **ACTION REQUIRED:**
            1. Review the workflow logs for details
            2. Remove any exposed secrets immediately
            3. Rotate any compromised credentials
            4. Use environment variables or secrets management
            
            **Common issues:**
            - API keys in code
            - Database credentials
            - Private keys or certificates
            - Authentication tokens
            
            Please fix these issues before merging.`;
          }
          
          github.rest.issues.createComment({
            owner,
            repo,
            issue_number: number,
            body: message
          });
